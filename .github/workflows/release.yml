name: Release

on:
 push:
  tags:
   - "v*"

permissions:
 contents: write
 packages: write

jobs:
 test:
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v4

   - name: Setup Go
     uses: actions/setup-go@v4
     with:
      go-version: "1.24"

   - name: Run tests
     run: go test -v

   - name: Run benchmarks
     run: go test -bench=Benchmark -run=^$

 build-and-release:
  needs: test
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v4
     with:
      fetch-depth: 0

   - name: Setup Go
     uses: actions/setup-go@v4
     with:
      go-version: "1.24"

   - name: Setup Node.js
     uses: actions/setup-node@v4
     with:
      node-version: "18"
      registry-url: "https://registry.npmjs.org"

   - name: Get version
     id: version
     run: |
      VERSION=$(node -p "require('./package.json').version")
      echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
      echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT

   - name: Build binaries
     run: |
      # Build for Linux
      GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.PACKAGE_VERSION }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o bin/commenter .

      # Build for Windows 
      GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.PACKAGE_VERSION }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o bin/commenter.exe .

      # Build for macOS
      GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.PACKAGE_VERSION }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o bin/commenter-darwin .

   - name: Create checksums
     run: |
      cd bin
      sha256sum * > checksums.txt
      cat checksums.txt

   - name: Create release
     uses: softprops/action-gh-release@v1
     with:
      tag_name: ${{ steps.version.outputs.VERSION }}
      name: Release ${{ steps.version.outputs.VERSION }}
      generate_release_notes: true
      files: |
       bin/commenter
       bin/commenter.exe
       bin/commenter-darwin
       bin/checksums.txt
       README.md
       LICENSE
     env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

 update-npm:
  needs: build-and-release
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v4

   - name: Setup Node.js
     uses: actions/setup-node@v4
     with:
      node-version: "18"
      registry-url: "https://registry.npmjs.org"

   - name: Update package.json version
     run: |
      VERSION=${GITHUB_REF_NAME#v}
      CURRENT_VERSION=$(node -p "require('./package.json').version")
      if [ "$VERSION" != "$CURRENT_VERSION" ]; then
        npm version $VERSION --no-git-tag-version
        echo "Updated package.json to version $VERSION"
      else
        echo "package.json already at version $VERSION"
      fi

   - name: Publish to npm
     run: npm publish
     env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
